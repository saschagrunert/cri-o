name: integration
on:
  workflow_dispatch:
  push:
    tags:
      - v*
    branches:
      - main
      - release-*
      - update-nixpkgs-*
  pull_request:
env:
  CONMON_BINARY: /usr/local/bin/conmon # from: scripts/github-actions-setup
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-binaries:
    strategy:
      fail-fast: false
      matrix:
        run:
          - runner: ubuntu-latest
            arch: amd64
          - runner: ubuntu-24.04-arm
            arch: arm64
    name: binaries / ${{ matrix.run.arch }}
    runs-on: ${{ matrix.run.runner }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-test-binaries-${{ matrix.run.arch }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('test') }}
      - run: scripts/github-actions-packages
      - run: GO_BUILDFLAGS="-cover" make all test-binaries
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-binaries-${{ matrix.run.arch }}
          path: |
            bin/crio
            bin/pinns
            test/checkcriu/checkcriu
            test/checkseccomp/checkseccomp
            test/copyimg/copyimg
            test/nri/nri.test

  integration:
    needs: test-binaries
    strategy:
      fail-fast: false
      matrix:
        run:
          - name: critest / conmon / runc / amd64
            arch: amd64
            runner: ubuntu-latest
            defaultRuntime: runc
            runtimeType: oci
            critest: 1
            userns: 0
            jobs: 1
            timeout: 20

          - name: critest / conmon / crun / amd64
            arch: amd64
            runner: ubuntu-latest
            defaultRuntime: crun
            runtimeType: oci
            critest: 1
            userns: 0
            jobs: 1
            timeout: 20

          - name: critest / conmon-rs / runc / amd64
            arch: amd64
            runner: ubuntu-latest
            defaultRuntime: runc
            runtimeType: pod
            critest: 1
            userns: 0
            jobs: 1
            timeout: 20

          - name: critest / conmon-rs / crun / amd64
            arch: amd64
            runner: ubuntu-latest
            defaultRuntime: crun
            runtimeType: pod
            critest: 1
            userns: 0
            jobs: 1
            timeout: 20

          - name: critest / conmon / runc / arm64
            arch: arm64
            runner: ubuntu-24.04-arm
            defaultRuntime: runc
            runtimeType: oci
            critest: 1
            userns: 0
            jobs: 1
            timeout: 20

          - name: critest / conmon / crun / arm64
            arch: arm64
            runner: ubuntu-24.04-arm
            defaultRuntime: crun
            runtimeType: oci
            critest: 1
            userns: 0
            jobs: 1
            timeout: 20

          - name: critest / conmon-rs / runc / arm64
            arch: arm64
            runner: ubuntu-24.04-arm
            defaultRuntime: runc
            runtimeType: pod
            critest: 1
            userns: 0
            jobs: 1
            timeout: 20

          - name: critest / conmon-rs / crun / arm64
            arch: arm64
            runner: ubuntu-24.04-arm
            defaultRuntime: crun
            runtimeType: pod
            critest: 1
            userns: 0
            jobs: 1
            timeout: 20

          - name: integration / conmon / runc / amd64
            arch: amd64
            runner: ubuntu-latest
            defaultRuntime: runc
            runtimeType: oci
            critest: 0
            userns: 0
            jobs: 2
            timeout: 120

          - name: integration / conmon / crun / amd64
            arch: amd64
            runner: ubuntu-latest
            defaultRuntime: crun
            runtimeType: oci
            critest: 0
            userns: 0
            jobs: 2
            timeout: 120

          - name: integration / conmon-rs / runc / amd64
            arch: amd64
            runner: ubuntu-latest
            defaultRuntime: runc
            runtimeType: pod
            critest: 0
            userns: 0
            jobs: 2
            timeout: 120

          - name: integration / userns / runc / amd64
            arch: amd64
            runner: ubuntu-latest
            defaultRuntime: runc
            runtimeType: oci
            critest: 0
            userns: 1
            jobs: 2
            timeout: 120
    env:
      GOCOVERDIR: ${{ github.workspace }}/build/coverage/bats # It's used to make coverage profiles. https://go.dev/doc/build-cover
    name: ${{ matrix.run.name }}
    runs-on: ${{ matrix.run.runner }}
    timeout-minutes: ${{ matrix.run.timeout }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-${{ matrix.run.name }}-${{ matrix.run.arch }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('scripts/versions') }}
      - uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad # v4.0.0
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: test-binaries-${{ matrix.run.arch }}
      - name: Fix artifact permissions
        run: |
          chmod +x \
            bin/crio \
            bin/pinns \
            test/checkcriu/checkcriu \
            test/checkseccomp/checkseccomp \
            test/copyimg/copyimg \
            test/nri/nri.test
      - run: scripts/github-actions-packages
      - run: scripts/github-actions-setup
      - name: Switch to runc instead of crun
        if: ${{ matrix.run.defaultRuntime == 'runc' }}
        run: |
          sudo ln -sf $(command -v runc) $(command -v crun)
          crun --version
      - name: Run the test suite
        run: sudo -E test/test_runner.sh
        env:
          JOBS: ${{ matrix.run.jobs }}
          RUN_CRITEST: ${{ matrix.run.critest }}
          RUNTIME_TYPE: ${{ matrix.run.runtimeType }}
          TEST_USERNS: ${{ matrix.run.userns }}
          CONTAINER_DEFAULT_RUNTIME: ${{ matrix.run.defaultRuntime }}
      # Codecov
      - run: |
          sudo chown -R $(id -u):$(id -g) build
          go tool covdata textfmt -i="$GOCOVERDIR" -o build/coverage/coverprofile
      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: build/coverage/coverprofile
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
